# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master
- feature/*
- bugs/*

pool:
  vmImage: 'ubuntu-18.04'

steps:
- script: |
    sudo apt-get update && sudo apt-get install fftw3-dev libfftw3-mpi-dev libadplug-dev libsdl2-dev autoconf-archive golang-go
    mkdir ~/go
    go install github.com/filmil/tap2junit/...
  displayName: 'Installing prerequisites'
- script: |
    autoreconf --install
  displayName: 'Running autotools'
- script: |
    ./configure
  displayName: 'Source configuration'
 - script: |
    make check; ./build-aux/printtest.sh
  displayName: 'unit tests'
- script: |
    make
  displayName: 'Binary build'
- script: |
    make dist
  displayName: 'Source distribution creation'
- task: CopyFiles@1
  inputs:
    Contents: 'sadplay-$(Build.BuildNumber).tar.gz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
- task: GithubRelease@0
  displayName: 'Create GitHub Release'      
  inputs:
    action: edit
    gitHubConnection: mconfalonieri-oauth
    repositoryName: mconfalonieri/sadplay
    tagSource: manual
    tag: latest
    title: Latest build
    releaseNotes:
      Latest build from master
      * *sadplay-$(Build.BuildNumber).tar.gz* - source distribution
    assets: |
         $(Build.ArtifactStagingDirectory)/sadplay-$(Build.BuildNumber).tar.gz
    assetUploadMode: delete